This is  (or will hopefully become) a full documentation of the ADC-based interhub protocol
used by qhub.  This document assumes full knowledge (of at least familiarity with) the 
standard ADC protocol.

Message types are the same, with the addition of the 'S' type.  The 'S' type is used for
hub-hub messages that should not be forwarded to connected clients.  Currently, this is the
only difference between IHUB and BASE.

Handshake:
IHUB handshakes are almost identical to BASE handshakes.  The connecting party sends a SUP
message, which must indicate support for both BASE and IHUB.  The other then must reply with
its own SUP and INF.  After receiving the SUP from the opposing party, the connecting party
should send its own INF, and after the INF a GPA.  Unlike server-client connections,
server-server connections are passworded both ways.  Both sides must send correct GPA and
PAS commands, and after both sides have verified the other, the connection is moved to the
NORMAL state and the connection can be used.  Passwords are handled slightly differently:
instead of each client being registered and having to supply the password they were
registered with on the server, each server defines its own password that all other hubs
use when connecting to it.

Normal operation:
Messages of types A, B, D, and P are transparently (to the client) forwarded to connected
hubs, which then distribute the command to the correct client.  Hubs must take care to
locally cache BINFs coming down the interhub connection so they are able to send the
correct userlist to connecting clients.  Verification, however, should only be done by
the hub the client is physically connected to; other hubs must trust this as verification
is already taken care of by the password verification done at handshake time.

TODO: I and H types

Network architecture:
Currently, there is no forwarding of messages between servers; hubs must be directly
connected to every hub they wish to share users with.  This can result in interesting
situations where users connected to one hub will see a different set of users than those
connected to a connected hub because one hub is also sharing users with a third hub.  This
is mainly because it is easy to implement and it doesn't really matter as nobody is really
using this program anyway. :)
