Start doing things on the TODO

remove Liboop+ADNS, replace with selectable DNS thread(s)+poll/libevent(win32?) mechanism. 
(I see no reason for Liboop since libevent does all and is more portable?)
Maybe also a pure win32-solution that is not libevent.
	Start this by removing all ADNS/Liboop traces from interfaces.

Fix autoconf-macros: remove unused, and start using more of the existing ones.

Low-level network handling
	Queue broadcast messages
	Rate-limiting (allow bursting or not? its DDOSable.)
	Add customizable flood protection in ADCSocket

Protocol stuff
	Dont allow nick-collisions (made much more difficult by utf-8)
	Send delta-INFs

More work on multihub support (much has been accomplished however)
	automatically try reconnecting every few minutes if an interhub connection fails

re-work UserData class, possibly using just a hash_map<string,boost::any>

use fork() when there are multiple hubs to be run -- gives benefits of multithreading
	without having to deal with locks, etc, and plugins don't need to keep track of
	several different hubs

Polish plugins
	add operator functions plugin for bans, etc
	what about controlling chains of plugins? Can plugins stop following plugins
		from executing?
	Are plugins able to filter/suppress output from the non-plugin hubcore?
	What about filtering stuff on many outgoing clients? (think a modified list of users: the
		plugin-instance for one user wants no other users to receive his INFs, this can mean work
		if there are only hooks for incoming data?)) 
	Make a clean interface for event-notification (de)registration.
		(IO-refactor branch solves this)
